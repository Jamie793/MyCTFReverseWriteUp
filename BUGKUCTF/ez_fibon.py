from capstone import *
CODE = bytes([
    0xC7, 0x45, 0xA0, 0x64, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xA4,
    0x79, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xA8, 0x6E, 0x00, 0x00,
    0x00, 0xC7, 0x45, 0xAC, 0x76, 0x00, 0x00, 0x00, 0xC7, 0x45,
    0xB0, 0x46, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xB4, 0x55, 0x00,
    0x00, 0x00, 0xC7, 0x45, 0xB8, 0x7B, 0x00, 0x00, 0x00, 0xC7,
    0x45, 0xBC, 0x6D, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xC0, 0x40,
    0x00, 0x00, 0x00, 0xC7, 0x45, 0xC4, 0x5E, 0x00, 0x00, 0x00,
    0xC7, 0x45, 0xC8, 0x6D, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xCC,
    0x63, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xD0, 0x74, 0x00, 0x00,
    0x00, 0xC7, 0x45, 0xD4, 0x51, 0x00, 0x00, 0x00, 0xC7, 0x45,
    0xD8, 0x6D, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xDC, 0x56, 0x00,
    0x00, 0x00, 0xC7, 0x45, 0xE0, 0x53, 0x00, 0x00, 0x00, 0xC7,
    0x45, 0xE4, 0x7E, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xE8, 0x77,
    0x00, 0x00, 0x00, 0xC7, 0x45, 0xEC, 0x65, 0x00, 0x00, 0x00,
    0xC7, 0x45, 0xF0, 0x6E, 0x00, 0x00, 0x00, 0xC7, 0x45, 0xF4,
    0x72, 0x00, 0x00, 0x00, 0xC7, 0x85, 0x0C, 0x02, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00
])
md = Cs(CS_ARCH_X86, CS_MODE_64)

v5 = []
for i in md.disasm(CODE, 0x0000):
    v5.append(int(i.op_str.split(',')[-1], 16))
print(v5)
flag = [0]*22

v9 = 1
v8 = 1

for i in range(22):

    if i & 0x1 == 1:
        v8 += v9
        for j in range(0x40, 0x7F):
            if (v8 + i + j) % 64 + 64 == v5[i]:
                flag[i] = chr(j)
                # break

    else:
        v9 += v8
        for j in range(0x40, 0x7F):
            if (v9 + i + j) % 64 + 64 == v5[i]:
                flag[i] = chr(j)
                # flag.append(chr(j))
                # break


print(len(flag))
print(''.join(flag))
