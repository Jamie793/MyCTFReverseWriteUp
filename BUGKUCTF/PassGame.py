from capstone import *

CODE = bytes([0xC6, 0x45, 0xBC, 0x12, 0xC6, 0x45, 0xBD, 0x40, 0xC6, 0x45,
              0xBE, 0x62, 0xC6, 0x45, 0xBF, 0x05, 0xC6, 0x45, 0xC0, 0x02,
              0xC6, 0x45, 0xC1, 0x04, 0xC6, 0x45, 0xC2, 0x06, 0xC6, 0x45,
              0xC3, 0x03, 0xC6, 0x45, 0xC4, 0x06, 0xC6, 0x45, 0xC5, 0x30,
              0xC6, 0x45, 0xC6, 0x31, 0xC6, 0x45, 0xC7, 0x41, 0xC6, 0x45,
              0xC8, 0x20, 0xC6, 0x45, 0xC9, 0x0C, 0xC6, 0x45, 0xCA, 0x30,
              0xC6, 0x45, 0xCB, 0x41, 0xC6, 0x45, 0xCC, 0x1F, 0xC6, 0x45,
              0xCD, 0x4E, 0xC6, 0x45, 0xCE, 0x3E, 0xC6, 0x45, 0xCF, 0x20,
              0xC6, 0x45, 0xD0, 0x31, 0xC6, 0x45, 0xD1, 0x20, 0xC6, 0x45,
              0xD2, 0x01, 0xC6, 0x45, 0xD3, 0x39, 0xC6, 0x45, 0xD4, 0x60,
              0xC6, 0x45, 0xD5, 0x03, 0xC6, 0x45, 0xD6, 0x15, 0xC6, 0x45,
              0xD7, 0x09, 0xC6, 0x45, 0xD8, 0x04, 0xC6, 0x45, 0xD9, 0x3E,
              0xC6, 0x45, 0xDA, 0x03, 0xC6, 0x45, 0xDB, 0x05, 0xC6, 0x45,
              0xDC, 0x04, 0xC6, 0x45, 0xDD, 0x01, 0xC6, 0x45, 0xDE, 0x02,
              0xC6, 0x45, 0xDF, 0x03, 0xC6, 0x45, 0xE0, 0x2C, 0xC6, 0x45,
              0xE1, 0x41, 0xC6, 0x45, 0xE2, 0x4E, 0xC6, 0x45, 0xE3, 0x20,
              0xC6, 0x45, 0xE4, 0x10, 0xC6, 0x45, 0xE5, 0x61, 0xC6, 0x45,
              0xE6, 0x36, 0xC6, 0x45, 0xE7, 0x10, 0xC6, 0x45, 0xE8, 0x2C,
              0xC6, 0x45, 0xE9, 0x34, 0xC6, 0x45, 0xEA, 0x20, 0xC6, 0x45,
              0xEB, 0x40, 0xC6, 0x45, 0xEC, 0x59, 0xC6, 0x45, 0xED, 0x2D,
              0xC6, 0x45, 0xEE, 0x20, 0xC6, 0x45, 0xEF, 0x41, 0xC6, 0x45,
              0xF0, 0x0F, 0xC6, 0x45, 0xF1, 0x22, 0xC6, 0x45, 0xF2, 0x12,
              0xC6, 0x45, 0xF3, 0x10, 0xC6, 0x45, 0xF4, 0x00, 0xC6, 0x85,
              0x78, 0xFF, 0xFF, 0xFF, 0x7B, 0xC6, 0x85, 0x79, 0xFF, 0xFF,
              0xFF, 0x20, 0xC6, 0x85, 0x7A, 0xFF, 0xFF, 0xFF, 0x12, 0xC6,
              0x85, 0x7B, 0xFF, 0xFF, 0xFF, 0x62, 0xC6, 0x85, 0x7C, 0xFF,
              0xFF, 0xFF, 0x77, 0xC6, 0x85, 0x7D, 0xFF, 0xFF, 0xFF, 0x6C,
              0xC6, 0x85, 0x7E, 0xFF, 0xFF, 0xFF, 0x41, 0xC6, 0x85, 0x7F,
              0xFF, 0xFF, 0xFF, 0x29, 0xC6, 0x45, 0x80, 0x7C, 0xC6, 0x45,
              0x81, 0x50, 0xC6, 0x45, 0x82, 0x7D, 0xC6, 0x45, 0x83, 0x26,
              0xC6, 0x45, 0x84, 0x7C, 0xC6, 0x45, 0x85, 0x6F, 0xC6, 0x45,
              0x86, 0x4A, 0xC6, 0x45, 0x87, 0x31, 0xC6, 0x45, 0x88, 0x53,
              0xC6, 0x45, 0x89, 0x6C, 0xC6, 0x45, 0x8A, 0x5E, 0xC6, 0x45,
              0x8B, 0x6C, 0xC6, 0x45, 0x8C, 0x54, 0xC6, 0x45, 0x8D, 0x06,
              0xC6, 0x45, 0x8E, 0x60, 0xC6, 0x45, 0x8F, 0x53, 0xC6, 0x45,
              0x90, 0x2C, 0xC6, 0x45, 0x91, 0x79, 0xC6, 0x45, 0x92, 0x68,
              0xC6, 0x45, 0x93, 0x6E, 0xC6, 0x45, 0x94, 0x20, 0xC6, 0x45,
              0x95, 0x5F, 0xC6, 0x45, 0x96, 0x75, 0xC6, 0x45, 0x97, 0x65,
              0xC6, 0x45, 0x98, 0x63, 0xC6, 0x45, 0x99, 0x7B, 0xC6, 0x45,
              0x9A, 0x7F, 0xC6, 0x45, 0x9B, 0x77, 0xC6, 0x45, 0x9C, 0x60,
              0xC6, 0x45, 0x9D, 0x30, 0xC6, 0x45, 0x9E, 0x6B, 0xC6, 0x45,
              0x9F, 0x47, 0xC6, 0x45, 0xA0, 0x5C, 0xC6, 0x45, 0xA1, 0x1D,
              0xC6, 0x45, 0xA2, 0x51, 0xC6, 0x45, 0xA3, 0x6B, 0xC6, 0x45,
              0xA4, 0x5A, 0xC6, 0x45, 0xA5, 0x55, 0xC6, 0x45, 0xA6, 0x40,
              0xC6, 0x45, 0xA7, 0x0C, 0xC6, 0x45, 0xA8, 0x2B, 0xC6, 0x45,
              0xA9, 0x4C, 0xC6, 0x45, 0xAA, 0x56, 0xC6, 0x45, 0xAB, 0x0D,
              0xC6, 0x45, 0xAC, 0x72, 0xC6, 0x45, 0xAD, 0x01, 0xC6, 0x45,
              0xAE, 0x75, 0xC6, 0x45, 0xAF, 0x7E, 0xC6, 0x45, 0xB0, 0x00,
              0xC7, 0x85, 0x6C, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00])

data1 = []
data2 = []
md = Cs(CS_ARCH_X86, CS_MODE_64)
for i in md.disasm(CODE, 0x1000):
    # print("0x%x:\t%s\t%s" %(i.address, i.mnemonic, i.op_str))
    if i.address <= 0x10e0:
        data1.append(int(i.op_str.split(', ')[-1], 16))
    else:
        data2.append(int(i.op_str.split(', ')[-1], 16))


print(len((data1)))
print((data1))

print(len((data2)))
print((data2))

for i, v in enumerate(data1):
    data2[i] ^= data1[i]
    data2[i] ^= 0x13

print(''.join([chr(i) for i in data2]))
