from capstone import *
opcodeData = bytes([
    0x55, 0x48, 0x89, 0xE5, 0x48, 0x89, 0x7D, 0xF8, 0x48, 0x8B,
    0x45, 0xF8, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0,
    0x80, 0xDB, 0x18, 0x00, 0x3D, 0x00, 0x75, 0xE7, 0x09, 0x74,
    0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x4F, 0x04, 0x00,
    0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x01, 0x0F,
    0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x90, 0x53, 0x67,
    0x00, 0x3D, 0xC0, 0x40, 0x97, 0x2B, 0x74, 0x0A, 0xB8, 0x00,
    0x00, 0x00, 0x00, 0xE9, 0x2A, 0x04, 0x00, 0x00, 0x48, 0x8B,
    0x45, 0xF8, 0x48, 0x83, 0xC0, 0x02, 0x0F, 0xB6, 0x00, 0x0F,
    0xBE, 0xC0, 0x69, 0xC0, 0x80, 0x32, 0x38, 0x00, 0x3D, 0x80,
    0x22, 0x4B, 0x15, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00,
    0xE9, 0x05, 0x04, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48,
    0x83, 0xC0, 0x03, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69,
    0xC0, 0x18, 0x2A, 0x9F, 0x00, 0x3D, 0xA8, 0xEF, 0x09, 0x40,
    0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0xE0, 0x03,
    0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x04,
    0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x70, 0xB0,
    0x3C, 0x00, 0x3D, 0xD0, 0xC5, 0x28, 0x1D, 0x74, 0x0A, 0xB8,
    0x00, 0x00, 0x00, 0x00, 0xE9, 0xBB, 0x03, 0x00, 0x00, 0x48,
    0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x05, 0x0F, 0xB6, 0x00,
    0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0xA0, 0x67, 0x4E, 0x00, 0x3D,
    0x20, 0xE2, 0xEE, 0x1E, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00,
    0x00, 0xE9, 0x96, 0x03, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8,
    0x48, 0x83, 0xC0, 0x07, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0,
    0x69, 0xC0, 0xDA, 0xEE, 0x72, 0x00, 0x3D, 0xFC, 0x61, 0x3E,
    0x18, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x71,
    0x03, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0,
    0x08, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x10,
    0xB6, 0x54, 0x00, 0x3D, 0x50, 0xB1, 0x89, 0x11, 0x74, 0x0A,
    0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x4C, 0x03, 0x00, 0x00,
    0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x09, 0x0F, 0xB6,
    0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x40, 0x07, 0x34, 0x00,
    0x3D, 0x00, 0x79, 0x91, 0x0A, 0x74, 0x0A, 0xB8, 0x00, 0x00,
    0x00, 0x00, 0xE9, 0x27, 0x03, 0x00, 0x00, 0x48, 0x8B, 0x45,
    0xF8, 0x48, 0x83, 0xC0, 0x0A, 0x0F, 0xB6, 0x00, 0x0F, 0xBE,
    0xC0, 0x69, 0xC0, 0xA6, 0x92, 0xC6, 0x00, 0x3D, 0x6C, 0xA4,
    0xC8, 0x26, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9,
    0x02, 0x03, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83,
    0xC0, 0x0B, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0,
    0x5D, 0xE8, 0x5C, 0x00, 0x3D, 0xCD, 0x79, 0xC8, 0x11, 0x74,
    0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0xDD, 0x02, 0x00,
    0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x0C, 0x0F,
    0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x77, 0x4F, 0x78,
    0x00, 0x3D, 0xC7, 0x35, 0x07, 0x17, 0x74, 0x0A, 0xB8, 0x00,
    0x00, 0x00, 0x00, 0xE9, 0xB8, 0x02, 0x00, 0x00, 0x48, 0x8B,
    0x45, 0xF8, 0x48, 0x83, 0xC0, 0x0D, 0x0F, 0xB6, 0x00, 0x0F,
    0xBE, 0xC0, 0x69, 0xC0, 0xB5, 0x79, 0x88, 0x00, 0x3D, 0xA5,
    0x4B, 0x1F, 0x1A, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00,
    0xE9, 0x93, 0x02, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48,
    0x83, 0xC0, 0x0E, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69,
    0xC0, 0x9A, 0x52, 0x4F, 0x00, 0x3D, 0xE0, 0x7C, 0xDF, 0x0E,
    0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x6E, 0x02,
    0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x0F,
    0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x06, 0x58,
    0x45, 0x00, 0x3D, 0x4C, 0xB2, 0x8B, 0x1A, 0x74, 0x0A, 0xB8,
    0x00, 0x00, 0x00, 0x00, 0xE9, 0x49, 0x02, 0x00, 0x00, 0x48,
    0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x11, 0x0F, 0xB6, 0x00,
    0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0xA0, 0xA0, 0x37, 0x00, 0x3D,
    0x00, 0x1E, 0x6E, 0x0A, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00,
    0x00, 0xE9, 0x24, 0x02, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8,
    0x48, 0x83, 0xC0, 0x10, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0,
    0x69, 0xC0, 0xD0, 0x58, 0x9A, 0x00, 0x3D, 0xD0, 0xA6, 0x7B,
    0x3A, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0xFF,
    0x01, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0,
    0x12, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0xB0,
    0x83, 0x93, 0x00, 0x3D, 0x10, 0x3C, 0x63, 0x1D, 0x74, 0x0A,
    0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0xDA, 0x01, 0x00, 0x00,
    0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x13, 0x0F, 0xB6,
    0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0xE2, 0xDA, 0x51, 0x00,
    0x3D, 0x60, 0x0A, 0x59, 0x0F, 0x74, 0x0A, 0xB8, 0x00, 0x00,
    0x00, 0x00, 0xE9, 0xB5, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x45,
    0xF8, 0x48, 0x83, 0xC0, 0x14, 0x0F, 0xB6, 0x00, 0x0F, 0xBE,
    0xC0, 0x69, 0xC0, 0xDC, 0x73, 0xCD, 0x00, 0x3D, 0xFC, 0xCB,
    0xBE, 0x2D, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9,
    0x90, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83,
    0xC0, 0x15, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0,
    0x30, 0xBF, 0x53, 0x00, 0x3D, 0xB0, 0x91, 0xA5, 0x12, 0x74,
    0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x6B, 0x01, 0x00,
    0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x16, 0x0F,
    0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x8C, 0xF0, 0xDC,
    0x00, 0x3D, 0x0C, 0x25, 0xB7, 0x53, 0x74, 0x0A, 0xB8, 0x00,
    0x00, 0x00, 0x00, 0xE9, 0x46, 0x01, 0x00, 0x00, 0x48, 0x8B,
    0x45, 0xF8, 0x48, 0x83, 0xC0, 0x17, 0x0F, 0xB6, 0x00, 0x0F,
    0xBE, 0xC0, 0x69, 0xC0, 0x76, 0x72, 0x62, 0x00, 0x3D, 0x96,
    0xE8, 0xD7, 0x12, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00,
    0xE9, 0x21, 0x01, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48,
    0x83, 0xC0, 0x18, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69,
    0xC0, 0x20, 0x68, 0x5F, 0x00, 0x3D, 0x60, 0x44, 0xE5, 0x24,
    0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0xFC, 0x00,
    0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x19,
    0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0xA4, 0x75,
    0x76, 0x00, 0x3D, 0xC0, 0x0E, 0x36, 0x16, 0x74, 0x0A, 0xB8,
    0x00, 0x00, 0x00, 0x00, 0xE9, 0xD7, 0x00, 0x00, 0x00, 0x48,
    0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x1A, 0x0F, 0xB6, 0x00,
    0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0x58, 0xCE, 0x6F, 0x00, 0x3D,
    0x88, 0x1B, 0x46, 0x16, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00,
    0x00, 0xE9, 0xB2, 0x00, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8,
    0x48, 0x83, 0xC0, 0x1B, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0,
    0x69, 0xC0, 0x90, 0x62, 0x85, 0x00, 0x3D, 0x10, 0xF2, 0xB2,
    0x1D, 0x74, 0x0A, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xE9, 0x8D,
    0x00, 0x00, 0x00, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0,
    0x1C, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0xC4,
    0x5F, 0x87, 0x00, 0x3D, 0x0C, 0x14, 0xF8, 0x1A, 0x74, 0x07,
    0xB8, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x6B, 0x48, 0x8B, 0x45,
    0xF8, 0x48, 0x83, 0xC0, 0x1D, 0x0F, 0xB6, 0x00, 0x0F, 0xBE,
    0xC0, 0x69, 0xC0, 0xC0, 0x5B, 0x3E, 0x00, 0x3D, 0x40, 0x47,
    0x6C, 0x0C, 0x74, 0x07, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xEB,
    0x49, 0x48, 0x8B, 0x45, 0xF8, 0x48, 0x83, 0xC0, 0x1E, 0x0F,
    0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69, 0xC0, 0xC0, 0x0A, 0x8F,
    0x00, 0x3D, 0x40, 0x4F, 0xBB, 0x1E, 0x74, 0x07, 0xB8, 0x00,
    0x00, 0x00, 0x00, 0xEB, 0x27, 0x48, 0x8B, 0x45, 0xF8, 0x48,
    0x83, 0xC0, 0x1F, 0x0F, 0xB6, 0x00, 0x0F, 0xBE, 0xC0, 0x69,
    0xC0, 0x94, 0xE0, 0x57, 0x00, 0x3D, 0x44, 0xA8, 0xE8, 0x2A,
    0x74, 0x07, 0xB8, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x05, 0xB8,
    0x01, 0x00, 0x00, 0x00, 0x5D, 0xC3])
md = Cs(CS_ARCH_X86, CS_MODE_64)
dis = md.disasm(opcodeData, 0x0001)
flags = []
for i in dis:
    # print("0x%x:\t%s\t%s" % (i.address, i.mnemonic, i.op_str))
    if i.mnemonic == 'imul':
        orc = int(i.op_str.split(',')[2], 16)

    if i.mnemonic == 'cmp' and orc is not None:
        op = int(i.op_str.split(',')[1], 16)
        flags.append(chr(op // orc))
        orc = None

print(''.join(flags))
